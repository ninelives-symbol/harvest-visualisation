import mongodb from 'mongodb';
import { decode as base32decode, encode as base32encode } from 'thirty-two';
import symbolSdk from 'symbol-sdk';

const { MongoClient } = mongodb;
const { Binary, Long } = mongodb;

const rewards = [
{height: 1, reward: 0}, 
{height: 5760, reward: 191997042}, 
{height: 172799, reward: 183764522}, 
{height: 435299, reward: 175884998}, 
{height: 697799, reward: 168343336}, 
{height: 960299, reward: 161125048}, 
{height: 1222799, reward: 154216270}, 
{height: 1485299, reward: 147603728}, 
{height: 1747799, reward: 141274720}, 
{height: 2010299, reward: 135217090}, 
{height: 2272799, reward: 129419202}, 
{height: 2535299, reward: 123869918}, 
{height: 2797799, reward: 118558578}, 
{height: 3060299, reward: 113474978}, 
{height: 3322799, reward: 108609356}, 
{height: 3585299, reward: 103952364}, 
{height: 3847799, reward: 99495056}, 
{height: 4110299, reward: 95228870}, 
{height: 4372799, reward: 91145612}, 
{height: 4635299, reward: 87237436}, 
{height: 4897799, reward: 83496838}, 
{height: 5160299, reward: 79916630}, 
{height: 5422799, reward: 76489934}, 
{height: 5685299, reward: 73210170}, 
{height: 5947799, reward: 70071038}, 
{height: 6210299, reward: 67066506}, 
{height: 6472799, reward: 64190804}, 
{height: 6735299, reward: 61438406}, 
{height: 6997799, reward: 58804028}, 
{height: 7260299, reward: 56282608}, 
{height: 7522799, reward: 53869300}, 
{height: 7785299, reward: 51559472}, 
{height: 8047799, reward: 49348686}, 
{height: 8310299, reward: 47232696}, 
{height: 8572799, reward: 45207434}, 
{height: 8835299, reward: 43269014}, 
{height: 9097799, reward: 41413708}, 
{height: 9360299, reward: 39637956}, 
{height: 9622799, reward: 37938346}, 
{height: 9885299, reward: 36311610}, 
{height: 10147799, reward: 34754628}, 
{height: 10410299, reward: 33264406}, 
{height: 10672799, reward: 31838082}, 
{height: 10935299, reward: 30472918}, 
{height: 11197799, reward: 29166288}, 
{height: 11460299, reward: 27915686}, 
{height: 11722799, reward: 26718706}, 
{height: 11985299, reward: 25573052}, 
{height: 12247799, reward: 24476520}, 
{height: 12510299, reward: 23427008}, 
{height: 12772799, reward: 22422496}, 
{height: 13035299, reward: 21461056}, 
{height: 13297799, reward: 20540840}, 
{height: 13560299, reward: 19660082}, 
{height: 13822799, reward: 18817090}, 
{height: 14085299, reward: 18010244}, 
{height: 14347799, reward: 17237994}, 
{height: 14610299, reward: 16498858}, 
{height: 14872799, reward: 15791412}, 
{height: 15135299, reward: 15114302}, 
{height: 15397799, reward: 14466226}, 
{height: 15660299, reward: 13845938}, 
{height: 15922799, reward: 13252246}, 
{height: 16185299, reward: 12684012}, 
{height: 16447799, reward: 12140142}, 
{height: 16710299, reward: 11619592}, 
{height: 16972799, reward: 11121364}, 
{height: 17235299, reward: 10644498}, 
{height: 17497799, reward: 10188078}, 
{height: 17760299, reward: 9751230}, 
{height: 18022799, reward: 9333114}, 
{height: 18285299, reward: 8932924}, 
{height: 18547799, reward: 8549896}, 
{height: 18810299, reward: 8183290}, 
{height: 19072799, reward: 7832404}, 
{height: 19335299, reward: 7496562}, 
{height: 19597799, reward: 7175122}, 
{height: 19860299, reward: 6867464}, 
{height: 20122799, reward: 6573000}, 
{height: 20385299, reward: 6291160}, 
{height: 20647799, reward: 6021404}, 
{height: 20910299, reward: 5763216}, 
{height: 21172799, reward: 5516100}, 
{height: 21435299, reward: 5279578}, 
{height: 21697799, reward: 5053198}, 
{height: 21960299, reward: 4836526}, 
{height: 22222799, reward: 4629144}, 
{height: 22485299, reward: 4430652}, 
{height: 22747799, reward: 4240674}, 
{height: 23010299, reward: 4058840}, 
{height: 23272799, reward: 3884804}, 
{height: 23535299, reward: 3718230}, 
{height: 23797799, reward: 3558798}, 
{height: 24060299, reward: 3406202}, 
{height: 24322799, reward: 3260150}, 
{height: 24585299, reward: 3120360}, 
{height: 24847799, reward: 2986564}, 
{height: 25110299, reward: 2858506}, 
{height: 25372799, reward: 2735938}, 
{height: 25635299, reward: 2618624}, 
{height: 25897799, reward: 2506342}, 
{height: 26160299, reward: 2398874}, 
{height: 26422799, reward: 2296014}, 
{height: 26685299, reward: 2197564}, 
{height: 26947799, reward: 2103336}, 
{height: 27210299, reward: 2013150}, 
{height: 27472799, reward: 1926828}, 
{height: 27735299, reward: 1844210}, 
{height: 27997799, reward: 1765132}, 
{height: 28260299, reward: 1689446}, 
{height: 28522799, reward: 1617006}, 
{height: 28785299, reward: 1547672}, 
{height: 29047799, reward: 1481310}, 
{height: 29310299, reward: 1417794}, 
{height: 29572799, reward: 1357000}, 
{height: 29835299, reward: 1298814}, 
{height: 30097799, reward: 1243124}, 
{height: 30360299, reward: 1189820}, 
{height: 30622799, reward: 1138802}, 
{height: 30885299, reward: 1089972}, 
{height: 31147799, reward: 1043236}, 
{height: 31410299, reward: 998504}, 
{height: 31672799, reward: 955690}, 
{height: 31935299, reward: 914712}, 
{height: 32197799, reward: 875490}, 
{height: 32460299, reward: 837950}, 
{height: 32722799, reward: 802020}, 
{height: 32985299, reward: 767630}, 
{height: 33247799, reward: 734716}, 
{height: 33510299, reward: 703212}, 
{height: 33772799, reward: 673060}, 
{height: 34035299, reward: 644200}, 
{height: 34297799, reward: 616578}, 
{height: 34560299, reward: 590140}, 
{height: 34822799, reward: 564836}, 
{height: 35085299, reward: 540616}, 
{height: 35347799, reward: 517436}, 
{height: 35610299, reward: 495248}, 
{height: 35872799, reward: 474014}, 
{height: 36135299, reward: 453688}, 
{height: 36397799, reward: 434234}, 
{height: 36660299, reward: 415616}, 
{height: 36922799, reward: 397794}, 
{height: 37185299, reward: 380738}, 
{height: 37447799, reward: 364412}, 
{height: 37710299, reward: 348786}, 
{height: 37972799, reward: 333832}, 
{height: 38235299, reward: 319518}, 
{height: 38497799, reward: 305816}, 
{height: 38760299, reward: 292704}, 
{height: 39022799, reward: 280154}, 
{height: 39285299, reward: 268140}, 
{height: 39547799, reward: 256644}, 
{height: 39810299, reward: 245638}, 
{height: 40072799, reward: 235106}, 
{height: 40335299, reward: 225026}, 
{height: 40597799, reward: 215376}, 
{height: 40860299, reward: 206142}, 
{height: 41122799, reward: 197302}, 
{height: 41385299, reward: 188842}, 
{height: 41647799, reward: 180744}, 
{height: 41910299, reward: 172994}, 
{height: 42172799, reward: 165578}, 
{height: 42435299, reward: 158478}, 
{height: 42697799, reward: 151682}, 
{height: 42960299, reward: 145178}, 
{height: 43222799, reward: 138954}, 
{height: 43485299, reward: 132994}, 
{height: 43747799, reward: 127292}, 
{height: 44010299, reward: 121834}, 
{height: 44272799, reward: 116610}, 
{height: 44535299, reward: 111610}, 
{height: 44797799, reward: 106824}, 
{height: 45060299, reward: 102244}, 
{height: 45322799, reward: 97860}, 
{height: 45585299, reward: 93664}, 
{height: 45847799, reward: 89648}, 
{height: 46110299, reward: 85804}, 
{height: 46372799, reward: 82124}, 
{height: 46635299, reward: 78602}, 
{height: 46897799, reward: 75232}, 
{height: 47160299, reward: 72006}, 
{height: 47422799, reward: 68920}, 
{height: 47685299, reward: 65964}, 
{height: 47947799, reward: 63136}, 
{height: 48210299, reward: 60428}, 
{height: 48472799, reward: 57838}, 
{height: 48735299, reward: 55358}, 
{height: 48997799, reward: 52984}, 
{height: 49260299, reward: 50712}, 
{height: 49522799, reward: 48538}, 
{height: 49785299, reward: 46456}, 
{height: 50047799, reward: 44464}, 
{height: 50310299, reward: 42558}, 
{height: 50572799, reward: 40732}, 
{height: 50835299, reward: 38986}, 
{height: 51097799, reward: 37314}, 
{height: 51360299, reward: 35714}, 
{height: 51622799, reward: 34182}, 
{height: 51885299, reward: 32716}, 
{height: 52147799, reward: 31314}, 
{height: 52410299, reward: 29972}, 
{height: 52672799, reward: 28686}, 
{height: 52935299, reward: 27456}, 
{height: 53197799, reward: 26278}, 
{height: 53460299, reward: 25152}, 
{height: 53722799, reward: 24074}, 
{height: 53985299, reward: 23042}, 
{height: 54247799, reward: 22054}, 
{height: 54510299, reward: 21108}, 
{height: 54772799, reward: 20202}, 
{height: 55035299, reward: 19336}, 
{height: 55297799, reward: 18506}, 
{height: 55560299, reward: 17714}, 
{height: 55822799, reward: 16954}, 
{height: 56085299, reward: 16226}, 
{height: 56347799, reward: 15532}, 
{height: 56610299, reward: 14866}, 
{height: 56872799, reward: 14228}, 
{height: 57135299, reward: 13618}, 
{height: 57397799, reward: 13034}, 
{height: 57660299, reward: 12474}, 
{height: 57922799, reward: 11940}, 
{height: 58185299, reward: 11428}, 
{height: 58447799, reward: 10938}, 
{height: 58710299, reward: 10468}, 
{height: 58972799, reward: 10020}, 
{height: 59235299, reward: 9590}, 
{height: 59497799, reward: 9178}, 
{height: 59760299, reward: 8786}, 
{height: 60022799, reward: 8408}, 
{height: 60285299, reward: 8048}, 
{height: 60547799, reward: 7702}, 
{height: 60810299, reward: 7372}, 
{height: 61072799, reward: 7056}, 
{height: 61335299, reward: 6754}, 
{height: 61597799, reward: 6464}, 
{height: 61860299, reward: 6186}, 
{height: 62122799, reward: 5922}, 
{height: 62385299, reward: 5668}, 
{height: 62647799, reward: 5424}, 
{height: 62910299, reward: 5192}, 
{height: 63172799, reward: 4970}, 
{height: 63435299, reward: 4756}, 
{height: 63697799, reward: 4552}, 
{height: 63960299, reward: 4356}, 
{height: 64222799, reward: 4170}, 
{height: 64485299, reward: 3992}, 
{height: 64747799, reward: 3820}, 
{height: 65010299, reward: 3656}, 
{height: 65272799, reward: 3500}, 
{height: 65535299, reward: 3350}, 
{height: 65797799, reward: 3206}, 
{height: 66060299, reward: 3068}, 
{height: 66322799, reward: 2936}, 
{height: 66585299, reward: 2810}, 
{height: 66847799, reward: 2690}, 
{height: 67110299, reward: 2574}, 
{height: 67372799, reward: 2464}, 
{height: 67635299, reward: 2358}, 
{height: 67897799, reward: 2258}, 
{height: 68160299, reward: 2160}, 
{height: 68422799, reward: 2068}, 
{height: 68685299, reward: 1980}, 
{height: 68947799, reward: 1894}, 
{height: 69210299, reward: 1812}, 
{height: 69472799, reward: 1736}, 
{height: 69735299, reward: 1660}, 
{height: 69997799, reward: 1590}, 
{height: 70260299, reward: 1522}, 
{height: 70522799, reward: 1456}, 
{height: 70785299, reward: 1394}, 
{height: 71047799, reward: 1334}, 
{height: 71310299, reward: 1276}, 
{height: 71572799, reward: 1222}, 
{height: 71835299, reward: 1170}, 
{height: 72097799, reward: 1120}, 
{height: 72360299, reward: 1072}, 
{height: 72622799, reward: 1026}, 
{height: 72885299, reward: 982}, 
{height: 73147799, reward: 938}, 
{height: 73410299, reward: 898}, 
{height: 73672799, reward: 860}, 
{height: 73935299, reward: 824}, 
{height: 74197799, reward: 788}, 
{height: 74460299, reward: 754}, 
{height: 74722799, reward: 722}, 
{height: 74985299, reward: 690}, 
{height: 75247799, reward: 662}, 
{height: 75510299, reward: 632}, 
{height: 75772799, reward: 606}, 
{height: 76035299, reward: 580}, 
{height: 76297799, reward: 554}, 
{height: 76560299, reward: 530}, 
{height: 76822799, reward: 508}, 
{height: 77085299, reward: 486}, 
{height: 77347799, reward: 466}, 
{height: 77610299, reward: 446}, 
{height: 77872799, reward: 426}, 
{height: 78135299, reward: 408}, 
{height: 78397799, reward: 390}, 
{height: 78660299, reward: 374}, 
{height: 78922799, reward: 358}, 
{height: 79185299, reward: 342}, 
{height: 79447799, reward: 328}, 
{height: 79710299, reward: 314}, 
{height: 79972799, reward: 300}, 
{height: 80235299, reward: 286}, 
{height: 80497799, reward: 274}, 
{height: 80760299, reward: 262}, 
{height: 81022799, reward: 252}, 
{height: 81285299, reward: 240}, 
{height: 81547799, reward: 230}, 
{height: 81810299, reward: 220}, 
{height: 82072799, reward: 210}, 
{height: 82335299, reward: 202}, 
{height: 82597799, reward: 194}, 
{height: 82860299, reward: 184}, 
{height: 83122799, reward: 176}, 
{height: 83385299, reward: 170}, 
{height: 83647799, reward: 162}, 
{height: 83910299, reward: 154}, 
{height: 84172799, reward: 148}, 
{height: 84435299, reward: 142}, 
{height: 84697799, reward: 136}, 
{height: 84960299, reward: 130}, 
{height: 85222799, reward: 124}, 
{height: 85485299, reward: 118}, 
{height: 85747799, reward: 114}, 
{height: 86010299, reward: 108}, 
{height: 86272799, reward: 104}, 
{height: 86535299, reward: 100}, 
{height: 86797799, reward: 96}, 
{height: 87060299, reward: 92}, 
{height: 87322799, reward: 88}, 
{height: 87585299, reward: 84}, 
{height: 87847799, reward: 80}, 
{height: 88110299, reward: 76}, 
{height: 88372799, reward: 72}, 
{height: 88635299, reward: 70}, 
{height: 88897799, reward: 66}, 
{height: 89160299, reward: 64}, 
{height: 89422799, reward: 62}, 
{height: 89685299, reward: 58}, 
{height: 89947799, reward: 56}, 
{height: 90210299, reward: 54}, 
{height: 90472799, reward: 52}, 
{height: 90735299, reward: 48}, 
{height: 90997799, reward: 46}, 
{height: 91260299, reward: 44}, 
{height: 91522799, reward: 42}, 
{height: 91785299, reward: 40}, 
{height: 92047799, reward: 40}, 
{height: 92310299, reward: 38}, 
{height: 92572799, reward: 36}, 
{height: 92835299, reward: 34}, 
{height: 93097799, reward: 32}, 
{height: 93360299, reward: 32}, 
{height: 93622799, reward: 30}, 
{height: 93885299, reward: 28}, 
{height: 94147799, reward: 28}, 
{height: 94410299, reward: 26}, 
{height: 94672799, reward: 24}, 
{height: 94935299, reward: 24}, 
{height: 95197799, reward: 22}, 
{height: 95460299, reward: 22}, 
{height: 95722799, reward: 20}, 
{height: 95985299, reward: 20}, 
{height: 96247799, reward: 18}, 
{height: 96510299, reward: 18}, 
{height: 96772799, reward: 18}, 
{height: 97035299, reward: 16}, 
{height: 97297799, reward: 16}, 
{height: 97560299, reward: 14}, 
{height: 97822799, reward: 14}, 
{height: 98085299, reward: 14}, 
{height: 98347799, reward: 12}, 
{height: 98610299, reward: 12}, 
{height: 98872799, reward: 12}, 
{height: 99135299, reward: 12}, 
{height: 99397799, reward: 10}, 
{height: 99660299, reward: 10}, 
{height: 99922799, reward: 10}, 
{height: 100185299, reward: 10}, 
{height: 100447799, reward: 8}, 
{height: 100710299, reward: 8}, 
{height: 100972799, reward: 8}, 
{height: 101235299, reward: 8}, 
{height: 101497799, reward: 8}, 
{height: 101760299, reward: 6}, 
{height: 102022799, reward: 6}, 
{height: 102285299, reward: 6}, 
{height: 102547799, reward: 6}, 
{height: 102810299, reward: 6}, 
{height: 103072799, reward: 6}, 
{height: 103335299, reward: 6}, 
{height: 103597799, reward: 4}, 
{height: 103860299, reward: 4}, 
{height: 104122799, reward: 4}, 
{height: 104385299, reward: 4}, 
{height: 104647799, reward: 4}, 
{height: 104910299, reward: 4}, 
{height: 105172799, reward: 4}, 
{height: 105435299, reward: 4}, 
{height: 105697799, reward: 4}, 
{height: 105960299, reward: 2}, 
{height: 106222799, reward: 2}, 
{height: 106485299, reward: 2}, 
{height: 106747799, reward: 2}, 
{height: 107010299, reward: 2}, 
{height: 107272799, reward: 2}, 
{height: 107535299, reward: 2}, 
{height: 107797799, reward: 2}, 
{height: 108060299, reward: 2}, 
{height: 108322799, reward: 2}, 
{height: 108585299, reward: 2}, 
{height: 108847799, reward: 2}, 
{height: 109110299, reward: 2}, 
{height: 109372799, reward: 2}, 
{height: 109635299, reward: 2}, 
{height: 109897799, reward: 2}, 
{height: 110160299, reward: 1}, 
{height: 110422799, reward: 0}
]

function calculateReward(height, totalFee) {
  let reward = 0;

  // Find the correct reward 
  for (let i = 0; i < rewards.length; i++) {
    if (height < rewards[i].height) {
      break;
    }
    reward = rewards[i].reward/1000000;
  }

  // Add the total fee to the reward
  reward += totalFee/1000000;

  return reward;
}


async function fetchData(client, address) {
  console.log('Fetching data for address:', address);

  // Querying the accounts collection to get the public key
  const accountsCollection = client.db('catapult').collection('accounts');
  const buffer = base32decode(address);
  const binaryAddress = new Binary(buffer);
  const accountDocument = await accountsCollection.findOne({ 'account.address': binaryAddress });
  const publicKey = accountDocument.account.publicKey;
  if (accountDocument === null) {
    throw new Error(`No account found for address: ${address}`);
  }
  
  console.log('Derived Public Key:', publicKey);
  const pk = publicKey.toString('hex');
  console.log('Public Key:', pk);


  // Querying transactions collection for type 16716 and linked public keys
  const transactionsCollection = client.db('catapult').collection('transactions');
  const linkedPublicKeys = [];
  await transactionsCollection.find({ 'transaction.type': 16716, 'transaction.signerPublicKey': publicKey }).forEach(doc => {
    const linkedPublicKey = doc.transaction.linkedPublicKey;
    linkedPublicKeys.push(linkedPublicKey);
    console.log('Found Linked PublicKey:', linkedPublicKey);
  });

  // Querying blocks collection for public key and linked public keys
  const blocksCollection = client.db('catapult').collection('blocks');
  const linkedPublicKeysQuery = linkedPublicKeys.concat(publicKey);
  const blocksBySigner = await blocksCollection.find({ 'block.signerPublicKey': { $in: linkedPublicKeysQuery } }).toArray();

  // Querying blocks collection for beneficiary address
  const blocksByBeneficiary = await blocksCollection.find({ 'block.beneficiaryAddress': binaryAddress }).toArray();

  // Combine both results
  const blocks = blocksBySigner.concat(blocksByBeneficiary);

  const heightRewardPairs = [];

blocks.forEach(block => {
  const height = block.block.height;
  const totalFee = block.meta.totalFee;
  const timestamp = block.block.timestamp + 1615853185000;
  
  // Calculate base reward
  let blockReward = calculateReward(height, totalFee);

  // Check for signer or beneficiary roles
  const isSigner = blocksBySigner.includes(block);
  const isBeneficiary = blocksByBeneficiary.includes(block);

  // Divide the reward into categories
  const harvesterReward = isSigner ? (blockReward * 0.70) : 0;
  const beneficiaryReward = isBeneficiary ? (blockReward * 0.25) : 0;
  const fees = (isSigner && isBeneficiary) ? (totalFee * 0.95)/1000000 : (isSigner ? (totalFee * 0.70)/1000000 : (isBeneficiary ? (totalFee * 0.25)/1000000 : 0));
  const totalReward = harvesterReward + beneficiaryReward + fees;

  heightRewardPairs.push({ height, totalReward: totalReward, timestamp, harvester: harvesterReward, beneficiary: beneficiaryReward, fees });
});

  return heightRewardPairs;
}
export default fetchData;
